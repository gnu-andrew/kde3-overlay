diff -Nru -x '*.lo' -x '*.loT' -x '*.o' -x '*.log' koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/conversion.cpp koffice-libs-1.6.9999/filters/koffice-libs/msword/conversion.cpp
--- koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/conversion.cpp	2010-04-17 13:11:06.346847072 +0100
+++ koffice-libs-1.6.9999/filters/koffice-libs/msword/conversion.cpp	2010-04-18 09:35:29.627846060 +0100
@@ -285,9 +285,9 @@
     return value;
 }
 
-void Conversion::setColorAttributes( QDomElement& element, int ico, const QString& prefix, bool defaultWhite )
+void Conversion::setColorAttributes( QDomElement& element, int cv, const QString& prefix, bool defaultWhite )
 {
-    QColor color = Conversion::color( ico, -1, defaultWhite );
+    QColor color = QColor( cv );
     element.setAttribute( prefix.isNull() ? "red" : prefix+"Red", color.red() );
     element.setAttribute( prefix.isNull() ? "blue" : prefix+"Blue", color.blue() );
     element.setAttribute( prefix.isNull() ? "green" : prefix+"Green", color.green() );
@@ -295,7 +295,7 @@
 
 void Conversion::setBorderAttributes( QDomElement& borderElement, const wvWare::Word97::BRC& brc, const QString& prefix )
 {
-    setColorAttributes( borderElement, brc.ico, prefix, false );
+    setColorAttributes( borderElement, brc.cv, prefix, false );
 
     borderElement.setAttribute( prefix.isNull() ? "width" : prefix+"Width",
                                 (double)brc.dptLineWidth / 8.0 );
diff -Nru -x '*.lo' -x '*.loT' -x '*.o' -x '*.log' koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/document.cpp koffice-libs-1.6.9999/filters/koffice-libs/msword/document.cpp
--- koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/document.cpp	2010-04-17 13:11:06.350847739 +0100
+++ koffice-libs-1.6.9999/filters/koffice-libs/msword/document.cpp	2010-04-18 09:27:00.830846140 +0100
@@ -390,28 +390,28 @@
 {
     // Frame borders
 
-    if ( brcTop.ico != 255 && brcTop.dptLineWidth != 255 ) // see tablehandler.cpp
+    if ( brcTop.cv != 0xFFFFFFFF && brcTop.dptLineWidth != 255 ) // see tablehandler.cpp
         Conversion::setBorderAttributes( frameElementOut, brcTop, "t" );
-    if ( brcBottom.ico != 255 && brcBottom.dptLineWidth != 255 ) // see tablehandler.cpp
+    if ( brcBottom.cv != 0xFFFFFFFF && brcBottom.dptLineWidth != 255 ) // see tablehandler.cpp
         Conversion::setBorderAttributes( frameElementOut, brcBottom, "b" );
-    if ( brcLeft.ico != 255 && brcLeft.dptLineWidth != 255 ) // could still be 255, for first column
+    if ( brcLeft.cv != 0xFFFFFFFF && brcLeft.dptLineWidth != 255 ) // could still be 255, for first column
         Conversion::setBorderAttributes( frameElementOut, brcLeft, "l" );
-    if ( brcRight.ico != 255 && brcRight.dptLineWidth != 255 ) // could still be 255, for last column
+    if ( brcRight.cv != 0xFFFFFFFF && brcRight.dptLineWidth != 255 ) // could still be 255, for last column
         Conversion::setBorderAttributes( frameElementOut, brcRight, "r" );
 
     // Frame background brush (color and fill style)
-    if ( shd.icoFore != 0 || shd.icoBack != 0 )
+    if ( shd.cvFore != 0xFF000000 || shd.cvBack != 0xFF000000 )
     {
-        // If ipat = 0 (solid fill), icoBack is the background color.
-        // But otherwise, icoFore is the one we need to set as bkColor
-        // (and icoBack is usually white; it's the other colour of the pattern,
+        // If ipat = 0 (solid fill), cvBack is the background color.
+        // But otherwise, cvFore is the one we need to set as bkColor
+        // (and cvBack is usually white; it's the other colour of the pattern,
         // something that we can't set in Qt apparently).
-        int bkColor = shd.ipat ? shd.icoFore : shd.icoBack;
-        kdDebug(30513) << "generateFrameBorder: " << " icoFore=" << shd.icoFore << " icoBack=" << shd.icoBack << " ipat=" << shd.ipat << " -> bkColor=" << bkColor << endl;
+        int bkColor = shd.ipat ? shd.cvFore : shd.cvBack;
+        kdDebug(30513) << "generateFrameBorder: " << " cvFore=" << shd.cvFore << " cvBack=" << shd.cvBack << " ipat=" << shd.ipat << " -> bkColor=" << bkColor << endl;
 
         // Reverse-engineer MSWord's own hackery: it models various gray levels
         // using dithering. But this looks crappy with Qt. So we go back to a QColor.
-        bool grayHack = ( shd.ipat && shd.icoFore == 1 && shd.icoBack == 8 );
+        bool grayHack = ( shd.ipat && shd.cvFore == 0x000000 && shd.cvBack == 0xFFFFFF );
         if ( grayHack )
         {
             bool ok;
diff -Nru -x '*.lo' -x '*.loT' -x '*.o' -x '*.log' koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/tablehandler.cpp koffice-libs-1.6.9999/filters/koffice-libs/msword/tablehandler.cpp
--- koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/tablehandler.cpp	2010-04-17 13:11:06.358848565 +0100
+++ koffice-libs-1.6.9999/filters/koffice-libs/msword/tablehandler.cpp	2010-04-18 09:15:06.756346113 +0100
@@ -169,11 +169,11 @@
     const wvWare::Word97::BRC& brcTop = tc.brcTop;
     const wvWare::Word97::BRC& brcBottom = tc.brcBottom;
     const wvWare::Word97::BRC& brcLeft =
-     ( tc.brcLeft.ico == 255 && tc.brcLeft.dptLineWidth == 255 && m_column > 0 ) ?
+     ( tc.brcLeft.cv == 0x00FFFFFF && tc.brcLeft.dptLineWidth == 255 && m_column > 0 ) ?
         m_tap->rgtc[ m_column - 1 ].brcRight
         : tc.brcLeft;
     const wvWare::Word97::BRC& brcRight =
-      ( tc.brcRight.ico == 255 && tc.brcRight.dptLineWidth == 255 && m_column < nbCells - 1 ) ?
+      ( tc.brcRight.cv == 0x00FFFFFF && tc.brcRight.dptLineWidth == 255 && m_column < nbCells - 1 ) ?
         m_tap->rgtc[ m_column + 1 ].brcLeft
         : tc.brcRight;
 
diff -Nru -x '*.lo' -x '*.loT' -x '*.o' -x '*.log' koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/texthandler.cpp koffice-libs-1.6.9999/filters/koffice-libs/msword/texthandler.cpp
--- koffice-libs-1.6.9999.orig/filters/koffice-libs/msword/texthandler.cpp	2010-04-17 13:11:06.362846533 +0100
+++ koffice-libs-1.6.9999/filters/koffice-libs/msword/texthandler.cpp	2010-04-18 08:59:22.322849154 +0100
@@ -322,9 +322,9 @@
     format.setAttribute( "pos", pos );
     format.setAttribute( "len", len );
 
-    if ( !refChp || refChp->ico != chp->ico )
+    if ( !refChp || refChp->cv != chp->cv )
     {
-        QColor color = Conversion::color( chp->ico, -1 );
+        QColor color = QColor ( chp->cv );
         QDomElement colorElem( mainDocument().createElement( "COLOR" ) );
         colorElem.setAttribute( "red", color.red() );
         colorElem.setAttribute( "blue", color.blue() );
